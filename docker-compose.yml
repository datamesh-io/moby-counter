version: '3'

volumes:
  app.clicks-db:
    driver: dm
  app.users-db:
    driver: dm
  app.uploads:
    driver: dm

services:
 
  web:
    build: .
    ports:
      - "8100:80"
    links:
      - "redis:redis"
      - "users:users"
    volumes:
      - ./client:/srv/app/client
      - ./server.js:/srv/app/server.js

  redis:
    image: redis
    volumes:
     - "app.clicks-db:/data"

  users:
    build: users/
    # TODO: uploads should be stored in a separate images service, not bundled
    # together in the users service. divide up the monolith to allow the users
    # service to scale! also, in the future, the images service should probably
    # use S3 rather than a plain filesystem.
    volumes:
     - "app.uploads:/uploads"
    depends_on:
      - users-db
    environment:
     - DEBUG
     - IMAGE_STORE=/uploads
     - DB_HOST=users-db
     - DB_PORT=5432
     - DB_USER=postgres
     - DB_NAME=postgres
     - DB_PASSWORD=secret
    restart: always

  users-db:
    image: postgres:9.6.6
    volumes:
     - "app.users-db:/var/lib/postgresql/data"
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_DB=postgres
     - POSTGRES_PASSWORD=secret
